---
import type { Icon } from "@/config/landing.interface";
import CheckIcon from "@/icons/commons/CheckIcon.astro";
import ConfigIcon from "@/icons/commons/ConfigIcon.astro";
import ProxyIcon from "@/icons/commons/ProxyIcon.astro";
import FileIcon from "@/icons/commons/FileIcon.astro";
import UrlIcon from "@/icons/commons/UrlIcon.astro";
import FacebookIcon from "@/icons/socials/FacebookIcon.astro";
import GithubIcon from "@/icons/socials/GithubIcon.astro";
import InstagramIcon from "@/icons/socials/InstagramIcon.astro";
import TwitterIcon from "@/icons/socials/TwitterIcon.astro";
import TypescriptIcon from "@/icons/techs/TypescriptIcon.astro";
import JavaIcon from "@/icons/techs/JavaIcon.astro";
import GoIcon from "@/icons/techs/GoIcon.astro";
import PythonIcon from "@/icons/techs/PythonIcon.astro";
import RustIcon from "@/icons/techs/RustIcon.astro";
import PhpIcon from "@/icons/techs/PhpIcon.astro";

interface Props {
  icon: Icon;
  class?: string;
}

const { icon, class: className } = Astro.props;

const icons = [
  ConfigIcon,
  ProxyIcon,
  FileIcon,
  UrlIcon,
  CheckIcon,
  FacebookIcon,
  GithubIcon,
  InstagramIcon,
  TwitterIcon,
  TypescriptIcon,
  PythonIcon,
  PhpIcon,
  JavaIcon,
  GoIcon,
  RustIcon,
];

let figures: Record<string, (_props: Record<string, unknown>) => unknown> = {};

icons.map((item) => {
  figures[item.name] = item;
});

const Figure = figures[icon];
---

{Figure ? <Figure class:list={[className]} /> : <p>Icon not found</p>}
