---
import MainLayout from '@/layouts/MainLayout.astro';
import AvatarBlogLarge from '@components/ui/avatars/AvatarBlogLarge.astro';
import CardRelated from '@components/ui/cards/CardRelated.astro';
import Bookmark from '@components/ui/buttons/Bookmark.astro';
import SocialShare from '@components/ui/buttons/SocialShare.astro';
import PostFeedback from '@components/ui/feedback/PostFeedback.astro';
import { capitalize, formatDate } from '@utils/utils';
import { SITE } from '@data/constants';
import { POST_TYPES, Posts, Tags, User } from '@/api';

import '@styles/blog.css';

// Update getStaticPaths for English posts
export async function getStaticPaths() {
  const blogPosts = await Posts.get(POST_TYPES.BLOGS);
  const data = await Promise.all(
    blogPosts.map(async (post) => {
      //get author
      const getAuthor = await User.get(post.author);
      const getTags = post.tags ? await Tags.from(post.tags) : [];
      // get related posts
      const related = await Posts.getRelatedPosts(post.id);
      const slugWithoutLang = post.slug.replace(/^en\//, ''); // Remove the "en/" prefix
      return {
        params: { slug: slugWithoutLang },
        props: {
          post: {
            ...post,
            authorInfo: getAuthor,
            getTags,
            related,
            readTime: 2,
          },
        },
      };
    })
  );

  return data;
}

// Get the current post's data
const { post } = Astro.props;

const pageTitle: string = `${post.title.rendered} | ${SITE.title}`;
---

<MainLayout title={pageTitle}>
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:px-6 lg:px-8 lg:pt-10">
    <div class="max-w-2xl">
      <div class="mb-6 flex items-center justify-between">
        <div class="font-inter flex w-full gap-x-5 sm:items-center sm:gap-x-3">
          <AvatarBlogLarge author={post.authorInfo} />
          <div class="grow">
            <div class="flex items-center justify-between gap-x-2">
              <div>
                <!--Post metadata and author info-->
                <span class="font-bold text-neutral-700 dark:text-neutral-300">
                  {post.authorInfo.name}
                </span>
                <ul class="text-xs text-neutral-500">
                  <li
                    class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                  >
                    {formatDate(post.date)}
                  </li>
                  <li
                    class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600"
                  >
                    2 min read
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!--Blog post title-->
      <h2
        class="font-cardo mb-3 text-2xl font-[400] text-neutral-800 dark:text-neutral-200 md:text-3xl"
      >
        {post.title.rendered}
      </h2>
      <!--Blog post contents-->
      <div
        class="blog-wrapper mb-5 space-y-5 dark:text-neutral-200 md:mb-8 md:space-y-8 md:text-3xl"
      >
        <Fragment set:html={post.content.rendered} />
      </div>
      <div
        class="mx-auto flex grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0"
      >
        <!--Blog post tags-->
        <div class="gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0">
          {
            post.getTags?.map((tag) => (
              <span class="font-inter mb-1 ml-1 inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300">
                {capitalize(tag.name)}
              </span>
            ))
          }
        </div>
        <!--Bookmark and Share buttons-->
        <div class="flex items-center justify-end gap-x-1.5">
          <Bookmark />
          <div
            class="mx-3 block h-4 border-e border-neutral-400 dark:border-neutral-500"
          >
          </div>
          <div class="inline-flex">
            <SocialShare pageTitle={post.title.rendered} />
          </div>
        </div>
      </div>
    </div>
    <PostFeedback
      title="Was this post helpful?"
      firstChoice="Yes"
      secondChoice="No"
    />
  </section>

  <!--Related articles section-->
  <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <div class="mb-10 max-w-2xl">
      <h2
        class="text-balance text-2xl font-[400] text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight"
      >
        Related articles
      </h2>
    </div>

    <div class="grid grid-cols-2 gap-6">
      {post.related.map((entry: any) => <CardRelated blogEntry={entry} />)}
    </div>
  </section>
</MainLayout>
